name: Release

on:
  push:
    branches: [ feature/gh-action-release ]
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build_artifacts:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Install npm dependencies
      run: npm install
      working-directory: SQLSchemaCompare

    - name: Restore win-x64 dependencies
      run: dotnet restore -r win-x64
    - name: Build win-x64
      run: msbuild SQLSchemaCompare.sln /p:Configuration=Release /p:RuntimeIdentifier=win-x64
    - name: Publish win-x64
      run: dotnet publish SQLSchemaCompare.UI.csproj --no-build --no-restore -c Release -r win-x64
      working-directory: SQLSchemaCompare.UI
    - name: Upload SQLSchemaCompare artifacts
      uses: actions/upload-artifact@v2
      with:
        name: SQLSchemaCompare
        path: SQLSchemaCompare
    - name: Upload win-x64 artifacts
      uses: actions/upload-artifact@v2
      with:
        name: publish-win
        path: .publish

#    - name: Restore linux-x64 dependencies
#      run: dotnet restore -r linux-x64
#    - name: Build linux-x64
#      run: msbuild SQLSchemaCompare.sln /p:Configuration=Release /p:RuntimeIdentifier=linux-x64
#    - name: Publish linux-x64
#      run: dotnet publish SQLSchemaCompare.UI.csproj --no-build --no-restore -c Release -r linux-x64
#      working-directory: SQLSchemaCompare.UI
#    - name: Upload linux-x64 artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: publish-linux
#        path: .publish

#    - name: Restore osx-x64 dependencies
#      run: dotnet restore -r osx-x64
#    - name: Build osx-x64
#      run: msbuild SQLSchemaCompare.sln /p:Configuration=Release /p:RuntimeIdentifier=osx-x64
#    - name: Publish osx-x64
#      run: dotnet publish SQLSchemaCompare.UI.csproj --no-build --no-restore -c Release -r osx-x64
#      working-directory: SQLSchemaCompare.UI
#    - name: Upload osx-x64 artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: publish-osx
#        path: .publish

  installer_win_x64:
    runs-on: windows-latest
    needs: build_artifacts
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '10.15'
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: |
          SQLSchemaCompare
          publish-win
    - name: Prepare artifacts
      run: |
        find .
        mv .publish-win .publish
    - name: Create installer
      run: npm run dist-win-x64
    - name: Clean installer files
      run: rm -rf win-unpacked
    - name: Publish installer
      uses: actions/upload-artifact@v2
      with:
        name: installer-win-x64
        path: installer

  installer_linux_x64:
    runs-on: linux-latest
    needs: build_artifacts
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2

  installer_osx_x64:
    runs-on: osx-latest
    needs: build_artifacts
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2

  clean_artifacts:
    runs-on: windows-latest
    needs: [installer_win_x64, installer_linux_x64, installer_osx_x64]
    steps:
    - uses: geekyeggo/delete-artifact@v1
      with:
        name: |
          SQLSchemaCompare
          publish-win
          publish-linux
          publish-osx
