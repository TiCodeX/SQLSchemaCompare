@using Core.Entities.Compare
@using Core.Entities.Database
@using Core.Interfaces
@using Services
@model List<ABaseCompareResultItem>
@{
    var divId = Guid.NewGuid();
    var orderedItems = Model.OrderBy(x =>
    {
        if (x.ItemType == typeof(ABaseDbTable))
        {
            return 0;
        }
        if (x.ItemType == typeof(ABaseDbView))
        {
            return 1;
        }
        return 2;
    }).ThenBy(x => x.SourceItemName);
}
<div class="card">
    <div class="card-header" data-toggle="collapse" data-target="#@divId">
        <h5 class="mb-0">@ViewBag.Title (@Model.Count)</h5>
    </div>
    <div id="@divId" class="collapse @(ViewBag.Show is bool && ViewBag.Show ? "show" : "")">
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th style="width: 10%">@Localization.LabelType</th>
                    <th style="width: 45%">@Localization.LabelName</th>
                    <th style="width: 45%">@Localization.LabelName</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in orderedItems)
                {
                    <tr onclick="Main.SelectRow(event, '@item.Id')">

                        @if (item.ItemType == typeof(ABaseDbTable))
                        {
                            <td>@Localization.LabelTable</td>
                        }
                        else if (item.ItemType == typeof(ABaseDbView))
                        {
                            <td>@Localization.LabelView</td>
                        }
                        <td>@item.SourceItemName</td>
                        <td>@item.TargetItemName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>