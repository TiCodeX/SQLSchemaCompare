@using System.Net.Http
@using Core.Enums
@using Core.Interfaces
@using Enums
@using Core.Entities.DatabaseProvider
@using Models
@model ADatabaseProviderOptions
@{
    var divId = Guid.NewGuid().ToString();
    var prefix = ((CompareDirection)ViewBag.Prefix).ToString();
    var loadSelectRequest = new WebRequest
    {
        Url = new Uri("/Project/CompareProject?handler=LoadDatabaseList", UriKind.Relative),
        Method = HttpMethod.Post,
        SerializeDataFromDiv = divId,
        Target = $"{prefix}Database"
    };
}
<div class="card" id="@divId">
    <input type="hidden" name="Direction" value="@prefix">
    <div class="card-body">
        <h5 class="card-title">@ViewBag.Title</h5>
        <p class="card-text">
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text min-width-100">Type</span>
                    </div>
                    <select class="form-control" name="@(prefix)DatabaseType">
                        @{
                            @:<option value="@DatabaseType.MicrosoftSql" @(Model is MicrosoftSqlDatabaseProviderOptions ? "selected" : "")>Microsoft SQL Server</option>
                            @:<option value="@DatabaseType.MySql" @(Model is MySqlDatabaseProviderOptions ? "selected" : "")>Oracle MySQL Server</option>
                            @:<option value="@DatabaseType.PostgreSql" @(Model is PostgreSqlDatabaseProviderOptions ? "selected" : "")>PostgreSQL Server</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text min-width-100">Hostname</span>
                    </div>
                    <input type="text" class="form-control" name="@(prefix)Hostname" value="@Model.Hostname">
                </div>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text min-width-100">Username</span>
                    </div>
                    <input type="text" class="form-control" name="@(prefix)Username" value="@Model.Username">
                </div>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text min-width-100">Password</span>
                    </div>
                    <input type="password" class="form-control" name="@(prefix)Password" value="@Model.Password">
                </div>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text min-width-100">Database</span>
                    </div>
                    <select class="form-control" name="@(prefix)Database">
                        @if (!string.IsNullOrEmpty(Model.Database))
                        {
                            <option value="@Model.Database">@Model.Database</option>
                        }
                    </select>
                    <div class="input-group-append">
                        <button style="@ButtonStyle.Info" onclick-load-select-values="@loadSelectRequest">
                            &#x21bb;
                        </button>
                    </div>
                </div>
            </div>
        </p>
    </div>
</div>